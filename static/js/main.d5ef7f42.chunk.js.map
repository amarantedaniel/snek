{"version":3,"sources":["Main.elm","registerServiceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","A2","A3","A4","A5","A6","_JsArray_initialize","size","offset","func","result","Array","i","_JsArray_initializeFromList","max","ls","length","_Utils_Tuple2","_Debug_crash","identifier","Error","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","push","key","$","elm$core$Dict$toList","_Utils_notEqual","_Utils_cmp","ord","_Utils_compare","n","elm$core$Basics$LT","elm$core$Basics$GT","elm$core$Basics$EQ","_Utils_Tuple3","_Utils_update","oldRecord","updatedFields","newRecord","_Utils_ap","xs","ys","root","_List_Cons","curr","_List_Nil","hd","tl","_List_cons","_List_fromArray","arr","out","_Basics_ceiling","Math","ceil","_Basics_floor","floor","_Basics_log","log","_Json_decodePrim","decoder","value","_Json_expecting","elm$core$Result$Ok","isFinite","_Json_wrap","_Json_decodeString","String","_Json_decodeField","field","_Json_map1","d1","decoders","g","_Json_mapMany","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","elm$core$Result$isOk","elm$core$Result$Err","elm$json$Json$Decode$Field","index","elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","elm$core$List$reverse","answer","h","errors","temp","elm$json$Json$Decode$OneOf","elm$json$Json$Decode$Failure","toElmValue","len","array","isArray","FileList","elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Scheduler_succeed","_Scheduler_binding","callback","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_spawn","_Scheduler_rawSend","msg","_Scheduler_send","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Platform_effectManagers","_Platform_createManager","init","onEffects","onSelfMsg","cmdMap","subMap","_Platform_instantiateManager","info","sendToApp","router","undefined","loop","state","j","_Platform_sendToApp","_Platform_sendToSelf","_Platform_leaf","home","k","l","_Platform_batch","list","m","_Platform_map","tagger","bag","o","_Platform_dispatchEffects","managers","cmdBag","subBag","effectsDict","_Platform_gatherEffects","isCmd","taggers","effect","q","p","_Platform_toEffect","newEffect","effects","_Platform_insert","_VirtualDom_divertHrefToApp","_Time_setInterval","interval","id","setInterval","clearInterval","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","string","_VirtualDom_nodeNS","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_node","_VirtualDom_keyedNodeNS","_VirtualDom_passiveSupported","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","object","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","handler","message","stopPropagation","U","currentEventNode","S","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","r","s","t","u","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","A","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","node","_VirtualDom_applyPatchReorder","_Browser_element","impl","flagDecoder","debugMetadata","args","update","subscriptions","stepperBuilder","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","aO","aX","aV","initialModel","view","aZ","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","name","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","nextNode","_VirtualDom_diff","cancelAnimationFrame","requestAnimationFrame","setTimeout","millisToPosix","_Browser_fakeNode","_Browser_doc","_Browser_window","_Browser_on","eventName","sendToSelf","_Browser_decodeEvent","elm$core$Maybe$Just","elm$core$Maybe$Nothing","elm$core$List$cons","elm$core$Dict$foldr","acc","left","$temp$func","$temp$acc","dict","author$project$Model$initialSnake","W","C","D","_","ag","author$project$Model$initialModel","Y","ac","ae","ap","ay","elm$core$Array$Array_elm_builtin","elm$core$Basics$ceiling","elm$core$Basics$logBase","base","number","elm$core$Array$shiftStep","elm$core$Elm$JsArray$empty","elm$core$Array$empty","elm$core$Elm$JsArray$initializeFromList","elm$core$List$foldl","elm$core$Array$compressNodes","nodes","_n0","remainingNodes","newAcc","elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","elm$core$Basics$floor","elm$core$Basics$max","elm$core$Elm$JsArray$length","elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","tree","elm$core$Elm$JsArray$initialize","elm$core$Array$initializeHelp","fn","fromIndex","tail","leaf","tailLen","elm$core$String$fromInt","elm$core$Platform$Cmd$none","author$project$Main$init","author$project$Update$KeyMsg","author$project$Update$Tick","elm$core$Platform$Sub$batch","elm$core$Platform$Sub$map","elm$time$Time$Every","elm$core$Dict$RBEmpty_elm_builtin","elm$core$Dict$empty","elm$core$Task$succeed","elm$time$Time$State","processes","ar","aA","elm$time$Time$init","elm$core$Dict$RBNode_elm_builtin","elm$core$Basics$compare","elm$core$Dict$balance","color","right","_n6","lRight","rK","rV","rLeft","rRight","elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","elm$core$Dict$insert","elm$core$Dict$foldl","elm$core$Dict$merge","leftStep","bothStep","rightStep","leftDict","rightDict","initialResult","_n3","rKey","rValue","stepState","_n2","lKey","lValue","rest","leftovers","intermediateResult","_n4","elm$core$Process$kill","elm$core$Task$andThen","elm$core$Dict$get","targetKey","elm$time$Time$addMySub","_n1","elm$core$Platform$sendToSelf","elm$core$Process$spawn","elm$time$Time$setInterval","elm$time$Time$spawnHelp","intervals","spawnTimer","elm$time$Time$onEffects","subs","_n7","kills","newTaggers","existing","spawnList","existingDict","newProcesses","elm$core$List$foldrHelper","ctr","r1","r2","r3","r4","elm$core$List$foldr","elm$core$List$map","elm$core$Platform$sendToApp","elm$core$Task$map2","taskA","taskB","elm$core$Task$sequence","tasks","elm$core$Basics$identity","elm$time$Time$now","Date","now","elm$time$Time$onSelfMsg","time","elm$core$Basics$composeL","elm$time$Time$subscription","elm$time$Time$every","elm$browser$Browser$Events$MySub","elm$browser$Browser$Events$State","pids","an","az","elm$browser$Browser$Events$init","elm$browser$Browser$Events$addKey","sub","elm$browser$Browser$Events$Event","ab","ai","elm$core$Task$map","elm$core$Task$init","elm$core$Task$spawnCmd","commands","elm$json$Json$Decode$map","elm$browser$Browser$Events$spawn","elm$core$Dict$fromList","assocs","elm$core$Dict$union","t1","t2","elm$browser$Browser$Events$onEffects","stepRight","news","stepLeft","pid","_n5","lives","stepBoth","newSubs","livePids","makeNewPids","elm$core$List$maybeCons","mx","elm$core$List$filterMap","messages","toMsg","elm$browser$Browser$Events$subscription","elm$browser$Browser$Events$on","elm$browser$Browser$Events$onKeyDown","ohanhi$keyboard$Keyboard$eventKeyDecoder","elm$browser$Browser$Events$onKeyUp","ohanhi$keyboard$Keyboard$subscriptions","elm$core$List$any","isOkay","elm$core$List$member","elm$core$List$takeReverse","kept","takeReverse","elm$core$List$takeTailRec","elm$core$List$takeFast","_n0$1","_n0$5","_n8","_n9","_n10","elm$core$List$take","author$project$Update$updateBody","snakeAteFood","body","author$project$Update$moveSnake","newHead","snake","author$project$Model$Position","author$project$Update$NewFood","elm$random$Random$Seed","elm$random$Random$next","incr","elm$random$Random$init","elm$random$Random$initialSeed","elm$random$Random$step","seed","elm$random$Random$onEffects","newSeed","elm$random$Random$onSelfMsg","elm$random$Random$map","genA","seed0","seed1","exports","elm$random$Random$command","elm$random$Random$generate","generator","elm$random$Random$peel","word","elm$random$Random$int","lo","range","threshhold","seedN","accountForBias","elm$random$Random$map2","genB","seed2","ohanhi$keyboard$Keyboard$ArrowDown","ohanhi$keyboard$Keyboard$ArrowLeft","ohanhi$keyboard$Keyboard$ArrowRight","ohanhi$keyboard$Keyboard$ArrowUp","ohanhi$keyboard$Keyboard$Arrows$arrowsDirection","_n1$8","keys","toInt","author$project$Update$validateDirectionIsValid","direction","_n0$4","author$project$Update$updateSnakeDirection","pressedKeys","author$project$Update$validateDirectionExists","author$project$Update$getDirection","ohanhi$keyboard$Keyboard$Backspace","ohanhi$keyboard$Keyboard$Clear","ohanhi$keyboard$Keyboard$Copy","ohanhi$keyboard$Keyboard$CrSel","ohanhi$keyboard$Keyboard$Cut","ohanhi$keyboard$Keyboard$Delete","ohanhi$keyboard$Keyboard$EraseEof","ohanhi$keyboard$Keyboard$ExSel","ohanhi$keyboard$Keyboard$Insert","ohanhi$keyboard$Keyboard$Paste","ohanhi$keyboard$Keyboard$Redo","ohanhi$keyboard$Keyboard$Undo","ohanhi$keyboard$Keyboard$F1","ohanhi$keyboard$Keyboard$F10","ohanhi$keyboard$Keyboard$F11","ohanhi$keyboard$Keyboard$F12","ohanhi$keyboard$Keyboard$F13","ohanhi$keyboard$Keyboard$F14","ohanhi$keyboard$Keyboard$F15","ohanhi$keyboard$Keyboard$F16","ohanhi$keyboard$Keyboard$F17","ohanhi$keyboard$Keyboard$F18","ohanhi$keyboard$Keyboard$F19","ohanhi$keyboard$Keyboard$F2","ohanhi$keyboard$Keyboard$F20","ohanhi$keyboard$Keyboard$F3","ohanhi$keyboard$Keyboard$F4","ohanhi$keyboard$Keyboard$F5","ohanhi$keyboard$Keyboard$F6","ohanhi$keyboard$Keyboard$F7","ohanhi$keyboard$Keyboard$F8","ohanhi$keyboard$Keyboard$F9","ohanhi$keyboard$Keyboard$ChannelDown","ohanhi$keyboard$Keyboard$ChannelUp","ohanhi$keyboard$Keyboard$MediaFastForward","ohanhi$keyboard$Keyboard$MediaPause","ohanhi$keyboard$Keyboard$MediaPlay","ohanhi$keyboard$Keyboard$MediaPlayPause","ohanhi$keyboard$Keyboard$MediaRecord","ohanhi$keyboard$Keyboard$MediaRewind","ohanhi$keyboard$Keyboard$MediaStop","ohanhi$keyboard$Keyboard$MediaTrackNext","ohanhi$keyboard$Keyboard$MediaTrackPrevious","ohanhi$keyboard$Keyboard$Alt","ohanhi$keyboard$Keyboard$AltGraph","ohanhi$keyboard$Keyboard$CapsLock","ohanhi$keyboard$Keyboard$Control","ohanhi$keyboard$Keyboard$Fn","ohanhi$keyboard$Keyboard$FnLock","ohanhi$keyboard$Keyboard$Hyper","ohanhi$keyboard$Keyboard$Meta","ohanhi$keyboard$Keyboard$NumLock","ohanhi$keyboard$Keyboard$ScrollLock","ohanhi$keyboard$Keyboard$Shift","ohanhi$keyboard$Keyboard$Super","ohanhi$keyboard$Keyboard$Symbol","ohanhi$keyboard$Keyboard$SymbolLock","ohanhi$keyboard$Keyboard$End","ohanhi$keyboard$Keyboard$Home","ohanhi$keyboard$Keyboard$PageDown","ohanhi$keyboard$Keyboard$PageUp","ohanhi$keyboard$Keyboard$AppSwitch","ohanhi$keyboard$Keyboard$Call","ohanhi$keyboard$Keyboard$Camera","ohanhi$keyboard$Keyboard$CameraFocus","ohanhi$keyboard$Keyboard$EndCall","ohanhi$keyboard$Keyboard$GoBack","ohanhi$keyboard$Keyboard$GoHome","ohanhi$keyboard$Keyboard$HeadsetHook","ohanhi$keyboard$Keyboard$LastNumberRedial","ohanhi$keyboard$Keyboard$MannerMode","ohanhi$keyboard$Keyboard$Notification","ohanhi$keyboard$Keyboard$VoiceDial","ohanhi$keyboard$Keyboard$Again","ohanhi$keyboard$Keyboard$Attn","ohanhi$keyboard$Keyboard$Cancel","ohanhi$keyboard$Keyboard$ContextMenu","ohanhi$keyboard$Keyboard$Escape","ohanhi$keyboard$Keyboard$Execute","ohanhi$keyboard$Keyboard$Find","ohanhi$keyboard$Keyboard$Finish","ohanhi$keyboard$Keyboard$Help","ohanhi$keyboard$Keyboard$Pause","ohanhi$keyboard$Keyboard$Play","ohanhi$keyboard$Keyboard$Props","ohanhi$keyboard$Keyboard$Select","ohanhi$keyboard$Keyboard$ZoomIn","ohanhi$keyboard$Keyboard$ZoomOut","ohanhi$keyboard$Keyboard$Enter","ohanhi$keyboard$Keyboard$Spacebar","ohanhi$keyboard$Keyboard$Tab","ohanhi$keyboard$Keyboard$anyKeyUpper","fns","oneOf","ohanhi$keyboard$Keyboard$oneOf","str","toUpperCase","elm$core$String$toUpper","elm$core$Basics$neq","elm$core$List$filter","isGood","ohanhi$keyboard$Keyboard$insert","keyParser","rawKey","ohanhi$keyboard$Keyboard$remove","ohanhi$keyboard$Keyboard$update","ohanhi$keyboard$Keyboard$updateWithParser","author$project$Update$update","head","author$project$Update$updateHead","newSnake","author$project$Update$repositionFood","author$project$Update$runLoop","newPressedKeys","author$project$Model$Size","width","height","aL","a_","author$project$View$cellSize","author$project$View$gridSize","elm$svg$Svg$trustedNode","elm$svg$Svg$rect","elm$svg$Svg$Attributes$height","elm$svg$Svg$Attributes$style","elm$svg$Svg$Attributes$width","author$project$View$renderBackground","elm$svg$Svg$circle","elm$svg$Svg$Attributes$cx","elm$svg$Svg$Attributes$cy","elm$svg$Svg$Attributes$fill","elm$svg$Svg$Attributes$r","elm$svg$Svg$Attributes$stroke","elm$virtual_dom$VirtualDom$text","elm$svg$Svg$text","elm$svg$Svg$text_","elm$svg$Svg$Attributes$fontSize","elm$svg$Svg$Attributes$fontWeight","elm$svg$Svg$Attributes$textAnchor","elm$svg$Svg$Attributes$x","elm$svg$Svg$Attributes$y","author$project$View$renderSnakePart","position","elm$html$Html$div","elm$html$Html$h1","elm$html$Html$text","elm$svg$Svg$svg","elm$svg$Svg$Attributes$viewBox","Main","food","gameOver","author$project$Main$main","_Platform_mergeExportsProd","obj","this","isLocalhost","registerValidSW","swUrl","navigator","registration","installingWorker","installing","controller","console","error","Elm","URL","process","location","publicUrl","origin","concat","fetch","response","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d5ef7f42.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File === 'function' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.T.F === region.aa.F)\n\t{\n\t\treturn 'on line ' + region.T.F;\n\t}\n\treturn 'on lines ' + region.T.F + ' through ' + region.aa.F;\n}\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = elm$core$Set$toList(x);\n\t\ty = elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? elm$core$Basics$LT : n ? elm$core$Basics$GT : elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === elm$core$Basics$EQ ? 0 : ord === elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? elm$core$Maybe$Nothing\n\t\t: elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? elm$core$Maybe$Just(n) : elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif (elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn elm$core$Result$Err(elm$json$Json$Decode$OneOf(elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList === 'function' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2(elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aO,\n\t\timpl.aX,\n\t\timpl.aV,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\telm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\telm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\nfunction _Time_now(millisToPosix)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(millisToPosix(Date.now())));\n\t});\n}\n\nvar _Time_setInterval = F2(function(interval, task)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);\n\t\treturn function() { clearInterval(id); };\n\t});\n});\n\nfunction _Time_here()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(\n\t\t\tA2(elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)\n\t\t));\n\t});\n}\n\n\nfunction _Time_getZoneName()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar name = elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tvar name = elm$time$Time$Offset(new Date().getTimezoneOffset());\n\t\t}\n\t\tcallback(_Scheduler_succeed(name));\n\t});\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2(elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3(elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\telm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tq: func(record.q),\n\t\tU: record.U,\n\t\tS: record.S\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.q;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.U;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.S) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aO,\n\t\timpl.aX,\n\t\timpl.aV,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.aZ;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aO,\n\t\timpl.aX,\n\t\timpl.aV,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.I && impl.I(sendToApp)\n\t\t\tvar view = impl.aZ;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.W);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.aW) && (_VirtualDom_doc.title = title = doc.aW);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.aR;\n\tvar onUrlRequest = impl.aS;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tI: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.as === next.as\n\t\t\t\t\t\t\t&& curr.ah === next.ah\n\t\t\t\t\t\t\t&& curr.ao.a === next.ao.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\taO: function(flags)\n\t\t{\n\t\t\treturn A3(impl.aO, flags, _Browser_getUrl(), key);\n\t\t},\n\t\taZ: impl.aZ,\n\t\taX: impl.aX,\n\t\taV: impl.aV\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn elm$core$Result$isOk(result) ? elm$core$Maybe$Just(result.a) : elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { aM: 'hidden', aF: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { aM: 'mozHidden', aF: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { aM: 'msHidden', aF: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { aM: 'webkitHidden', aF: 'webkitvisibilitychange' }\n\t\t: { aM: 'hidden', aF: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail(elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\tax: _Browser_getScene(),\n\t\taB: {\n\t\t\tC: _Browser_window.pageXOffset,\n\t\t\tD: _Browser_window.pageYOffset,\n\t\t\ta_: _Browser_doc.documentElement.clientWidth,\n\t\t\taL: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\ta_: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\taL: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\tax: {\n\t\t\t\ta_: node.scrollWidth,\n\t\t\t\taL: node.scrollHeight\n\t\t\t},\n\t\t\taB: {\n\t\t\t\tC: node.scrollLeft,\n\t\t\t\tD: node.scrollTop,\n\t\t\t\ta_: node.clientWidth,\n\t\t\t\taL: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\tax: _Browser_getScene(),\n\t\t\taB: {\n\t\t\t\tC: x,\n\t\t\t\tD: y,\n\t\t\t\ta_: _Browser_doc.documentElement.clientWidth,\n\t\t\t\taL: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\taG: {\n\t\t\t\tC: x + rect.left,\n\t\t\t\tD: y + rect.top,\n\t\t\t\ta_: rect.width,\n\t\t\t\taL: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\nvar elm$core$Basics$EQ = 1;\nvar elm$core$Basics$LT = 0;\nvar elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3(elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar elm$core$List$cons = _List_cons;\nvar elm$core$Array$toList = function (array) {\n\treturn A3(elm$core$Array$foldr, elm$core$List$cons, _List_Nil, array);\n};\nvar elm$core$Basics$GT = 2;\nvar elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2(elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Set$toList = function (_n0) {\n\tvar dict = _n0;\n\treturn elm$core$Dict$keys(dict);\n};\nvar ohanhi$keyboard$Keyboard$Arrows$East = 2;\nvar author$project$Model$initialSnake = {\n\tW: _List_fromArray(\n\t\t[\n\t\t\t{C: 2, D: 0},\n\t\t\t{C: 1, D: 0},\n\t\t\t{C: 1, D: 0}\n\t\t]),\n\t_: 2,\n\tag: {C: 3, D: 0}\n};\nvar elm$core$Basics$False = 1;\nvar author$project$Model$initialModel = {\n\tY: 0,\n\tac: {C: 10, D: 10},\n\tae: false,\n\tap: _List_Nil,\n\tay: author$project$Model$initialSnake\n};\nvar elm$core$Basics$True = 0;\nvar elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar elm$core$Array$branchFactor = 32;\nvar elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar elm$core$Basics$ceiling = _Basics_ceiling;\nvar elm$core$Basics$fdiv = _Basics_fdiv;\nvar elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar elm$core$Basics$toFloat = _Basics_toFloat;\nvar elm$core$Array$shiftStep = elm$core$Basics$ceiling(\n\tA2(elm$core$Basics$logBase, 2, elm$core$Array$branchFactor));\nvar elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar elm$core$Array$empty = A4(elm$core$Array$Array_elm_builtin, 0, elm$core$Array$shiftStep, elm$core$Elm$JsArray$empty, elm$core$Elm$JsArray$empty);\nvar elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$reverse = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$List$cons, _List_Nil, list);\n};\nvar elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _n0.a;\n\t\t\tvar remainingNodes = _n0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$eq = _Utils_equal;\nvar elm$core$Tuple$first = function (_n0) {\n\tvar x = _n0.a;\n\treturn x;\n};\nvar elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = elm$core$Basics$ceiling(nodeListSize / elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2(elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$add = _Basics_add;\nvar elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$floor = _Basics_floor;\nvar elm$core$Basics$gt = _Utils_gt;\nvar elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar elm$core$Basics$mul = _Basics_mul;\nvar elm$core$Basics$sub = _Basics_sub;\nvar elm$core$Elm$JsArray$length = _JsArray_length;\nvar elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.a) {\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.c),\n\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.c);\n\t\t} else {\n\t\t\tvar treeLen = builder.a * elm$core$Array$branchFactor;\n\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\tA2(elm$core$Basics$logBase, elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? elm$core$List$reverse(builder.d) : builder.d;\n\t\t\tvar tree = A2(elm$core$Array$treeFromBuilder, correctNodeList, builder.a);\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.c) + treeLen,\n\t\t\t\tA2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.c);\n\t\t}\n\t});\nvar elm$core$Basics$idiv = _Basics_idiv;\nvar elm$core$Basics$lt = _Utils_lt;\nvar elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{d: nodeList, a: (len / elm$core$Array$branchFactor) | 0, c: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = elm$core$Array$Leaf(\n\t\t\t\t\tA3(elm$core$Elm$JsArray$initialize, elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2(elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$le = _Utils_le;\nvar elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % elm$core$Array$branchFactor;\n\t\t\tvar tail = A3(elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - elm$core$Array$branchFactor;\n\t\t\treturn A5(elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Maybe$Nothing = {$: 1};\nvar elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$core$Basics$and = _Basics_and;\nvar elm$core$Basics$append = _Utils_append;\nvar elm$core$Basics$or = _Basics_or;\nvar elm$core$Char$toCode = _Char_toCode;\nvar elm$core$Char$isLower = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar elm$core$Char$isUpper = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar elm$core$Char$isAlpha = function (_char) {\n\treturn elm$core$Char$isLower(_char) || elm$core$Char$isUpper(_char);\n};\nvar elm$core$Char$isDigit = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar elm$core$Char$isAlphaNum = function (_char) {\n\treturn elm$core$Char$isLower(_char) || (elm$core$Char$isUpper(_char) || elm$core$Char$isDigit(_char));\n};\nvar elm$core$List$length = function (xs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar elm$core$List$map2 = _List_map2;\nvar elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2(elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3(elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\telm$core$List$range,\n\t\t\t\t0,\n\t\t\t\telm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar elm$core$String$all = _String_all;\nvar elm$core$String$fromInt = _String_fromNumber;\nvar elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar elm$core$String$uncons = _String_uncons;\nvar elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\telm$core$String$join,\n\t\t'\\n    ',\n\t\tA2(elm$core$String$split, '\\n', str));\n};\nvar elm$json$Json$Encode$encode = _Json_encode;\nvar elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + (elm$core$String$fromInt(i + 1) + (') ' + elm$json$Json$Decode$indent(\n\t\t\telm$json$Json$Decode$errorToString(error))));\n\t});\nvar elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2(elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _n1 = elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\t\t\t\tvar _char = _n2.a;\n\t\t\t\t\t\t\tvar rest = _n2.b;\n\t\t\t\t\t\t\treturn elm$core$Char$isAlpha(_char) && A2(elm$core$String$all, elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + (elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + (elm$core$String$fromInt(\n\t\t\t\t\t\t\t\telm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2(elm$core$List$indexedMap, elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\telm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + (elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2(elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Platform$Cmd$batch = _Platform_batch;\nvar elm$core$Platform$Cmd$none = elm$core$Platform$Cmd$batch(_List_Nil);\nvar author$project$Main$init = _Utils_Tuple2(author$project$Model$initialModel, elm$core$Platform$Cmd$none);\nvar author$project$Main$tickFrequency = 100;\nvar author$project$Update$KeyMsg = function (a) {\n\treturn {$: 1, a: a};\n};\nvar author$project$Update$Tick = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Platform$Sub$batch = _Platform_batch;\nvar elm$core$Platform$Sub$map = _Platform_map;\nvar elm$time$Time$Every = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar elm$core$Dict$empty = elm$core$Dict$RBEmpty_elm_builtin;\nvar elm$core$Task$succeed = _Scheduler_succeed;\nvar elm$time$Time$State = F2(\n\tfunction (taggers, processes) {\n\t\treturn {ar: processes, aA: taggers};\n\t});\nvar elm$time$Time$init = elm$core$Task$succeed(\n\tA2(elm$time$Time$State, elm$core$Dict$empty, elm$core$Dict$empty));\nvar elm$core$Dict$Black = 1;\nvar elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar elm$core$Basics$compare = _Utils_compare;\nvar elm$core$Dict$Red = 0;\nvar elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _n1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _n3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _n5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _n6 = left.d;\n\t\t\t\tvar _n7 = _n6.a;\n\t\t\t\tvar llK = _n6.b;\n\t\t\t\tvar llV = _n6.c;\n\t\t\t\tvar llLeft = _n6.d;\n\t\t\t\tvar llRight = _n6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, elm$core$Dict$RBEmpty_elm_builtin, elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _n1 = A2(elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_n1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _n0 = A3(elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_n0.$ === -1) && (!_n0.a)) {\n\t\t\tvar _n1 = _n0.a;\n\t\t\tvar k = _n0.b;\n\t\t\tvar v = _n0.c;\n\t\t\tvar l = _n0.d;\n\t\t\tvar r = _n0.e;\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _n0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar elm$core$Dict$foldl = F3(\n\tfunction (func, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldl, func, acc, left)),\n\t\t\t\t\t$temp$dict = right;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tdict = $temp$dict;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$merge = F6(\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\n\t\tvar stepState = F3(\n\t\t\tfunction (rKey, rValue, _n0) {\n\t\t\t\tstepState:\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar list = _n0.a;\n\t\t\t\t\tvar result = _n0.b;\n\t\t\t\t\tif (!list.b) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n2 = list.a;\n\t\t\t\t\t\tvar lKey = _n2.a;\n\t\t\t\t\t\tvar lValue = _n2.b;\n\t\t\t\t\t\tvar rest = list.b;\n\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) < 0) {\n\t\t\t\t\t\t\tvar $temp$rKey = rKey,\n\t\t\t\t\t\t\t\t$temp$rValue = rValue,\n\t\t\t\t\t\t\t\t$temp$_n0 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\tA3(leftStep, lKey, lValue, result));\n\t\t\t\t\t\t\trKey = $temp$rKey;\n\t\t\t\t\t\t\trValue = $temp$rValue;\n\t\t\t\t\t\t\t_n0 = $temp$_n0;\n\t\t\t\t\t\t\tcontinue stepState;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) > 0) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\t\tA4(bothStep, lKey, lValue, rValue, result));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar _n3 = A3(\n\t\t\telm$core$Dict$foldl,\n\t\t\tstepState,\n\t\t\t_Utils_Tuple2(\n\t\t\t\telm$core$Dict$toList(leftDict),\n\t\t\t\tinitialResult),\n\t\t\trightDict);\n\t\tvar leftovers = _n3.a;\n\t\tvar intermediateResult = _n3.b;\n\t\treturn A3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_n4, result) {\n\t\t\t\t\tvar k = _n4.a;\n\t\t\t\t\tvar v = _n4.b;\n\t\t\t\t\treturn A3(leftStep, k, v, result);\n\t\t\t\t}),\n\t\t\tintermediateResult,\n\t\t\tleftovers);\n\t});\nvar elm$core$Process$kill = _Scheduler_kill;\nvar elm$core$Task$andThen = _Scheduler_andThen;\nvar elm$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar _n1 = A2(elm$core$Basics$compare, targetKey, key);\n\t\t\t\tswitch (_n1) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = left;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn elm$core$Maybe$Just(value);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = right;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$time$Time$addMySub = F2(\n\tfunction (_n0, state) {\n\t\tvar interval = _n0.a;\n\t\tvar tagger = _n0.b;\n\t\tvar _n1 = A2(elm$core$Dict$get, interval, state);\n\t\tif (_n1.$ === 1) {\n\t\t\treturn A3(\n\t\t\t\telm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[tagger]),\n\t\t\t\tstate);\n\t\t} else {\n\t\t\tvar taggers = _n1.a;\n\t\t\treturn A3(\n\t\t\t\telm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\tA2(elm$core$List$cons, tagger, taggers),\n\t\t\t\tstate);\n\t\t}\n\t});\nvar elm$core$Platform$sendToSelf = _Platform_sendToSelf;\nvar elm$core$Process$spawn = _Scheduler_spawn;\nvar elm$time$Time$Name = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$time$Time$Offset = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$time$Time$Zone = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$time$Time$customZone = elm$time$Time$Zone;\nvar elm$time$Time$setInterval = _Time_setInterval;\nvar elm$time$Time$spawnHelp = F3(\n\tfunction (router, intervals, processes) {\n\t\tif (!intervals.b) {\n\t\t\treturn elm$core$Task$succeed(processes);\n\t\t} else {\n\t\t\tvar interval = intervals.a;\n\t\t\tvar rest = intervals.b;\n\t\t\tvar spawnTimer = elm$core$Process$spawn(\n\t\t\t\tA2(\n\t\t\t\t\telm$time$Time$setInterval,\n\t\t\t\t\tinterval,\n\t\t\t\t\tA2(elm$core$Platform$sendToSelf, router, interval)));\n\t\t\tvar spawnRest = function (id) {\n\t\t\t\treturn A3(\n\t\t\t\t\telm$time$Time$spawnHelp,\n\t\t\t\t\trouter,\n\t\t\t\t\trest,\n\t\t\t\t\tA3(elm$core$Dict$insert, interval, id, processes));\n\t\t\t};\n\t\t\treturn A2(elm$core$Task$andThen, spawnRest, spawnTimer);\n\t\t}\n\t});\nvar elm$time$Time$onEffects = F3(\n\tfunction (router, subs, _n0) {\n\t\tvar processes = _n0.ar;\n\t\tvar rightStep = F3(\n\t\t\tfunction (_n6, id, _n7) {\n\t\t\t\tvar spawns = _n7.a;\n\t\t\t\tvar existing = _n7.b;\n\t\t\t\tvar kills = _n7.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\texisting,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\t\tfunction (_n5) {\n\t\t\t\t\t\t\treturn kills;\n\t\t\t\t\t\t},\n\t\t\t\t\t\telm$core$Process$kill(id)));\n\t\t\t});\n\t\tvar newTaggers = A3(elm$core$List$foldl, elm$time$Time$addMySub, elm$core$Dict$empty, subs);\n\t\tvar leftStep = F3(\n\t\t\tfunction (interval, taggers, _n4) {\n\t\t\t\tvar spawns = _n4.a;\n\t\t\t\tvar existing = _n4.b;\n\t\t\t\tvar kills = _n4.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2(elm$core$List$cons, interval, spawns),\n\t\t\t\t\texisting,\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar bothStep = F4(\n\t\t\tfunction (interval, taggers, id, _n3) {\n\t\t\t\tvar spawns = _n3.a;\n\t\t\t\tvar existing = _n3.b;\n\t\t\t\tvar kills = _n3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\tA3(elm$core$Dict$insert, interval, id, existing),\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar _n1 = A6(\n\t\t\telm$core$Dict$merge,\n\t\t\tleftStep,\n\t\t\tbothStep,\n\t\t\trightStep,\n\t\t\tnewTaggers,\n\t\t\tprocesses,\n\t\t\t_Utils_Tuple3(\n\t\t\t\t_List_Nil,\n\t\t\t\telm$core$Dict$empty,\n\t\t\t\telm$core$Task$succeed(0)));\n\t\tvar spawnList = _n1.a;\n\t\tvar existingDict = _n1.b;\n\t\tvar killTask = _n1.c;\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (newProcesses) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tA2(elm$time$Time$State, newTaggers, newProcesses));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n2) {\n\t\t\t\t\treturn A3(elm$time$Time$spawnHelp, router, spawnList, existingDict);\n\t\t\t\t},\n\t\t\t\tkillTask));\n\t});\nvar elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\telm$core$List$reverse(r4)) : A4(elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4(elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\telm$core$List$foldr,\n\t\telm$core$Task$map2(elm$core$List$cons),\n\t\telm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar elm$time$Time$Posix = elm$core$Basics$identity;\nvar elm$time$Time$millisToPosix = elm$core$Basics$identity;\nvar elm$time$Time$now = _Time_now(elm$time$Time$millisToPosix);\nvar elm$time$Time$onSelfMsg = F3(\n\tfunction (router, interval, state) {\n\t\tvar _n0 = A2(elm$core$Dict$get, interval, state.aA);\n\t\tif (_n0.$ === 1) {\n\t\t\treturn elm$core$Task$succeed(state);\n\t\t} else {\n\t\t\tvar taggers = _n0.a;\n\t\t\tvar tellTaggers = function (time) {\n\t\t\t\treturn elm$core$Task$sequence(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tfunction (tagger) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$Platform$sendToApp,\n\t\t\t\t\t\t\t\trouter,\n\t\t\t\t\t\t\t\ttagger(time));\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttaggers));\n\t\t\t};\n\t\t\treturn A2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n1) {\n\t\t\t\t\treturn elm$core$Task$succeed(state);\n\t\t\t\t},\n\t\t\t\tA2(elm$core$Task$andThen, tellTaggers, elm$time$Time$now));\n\t\t}\n\t});\nvar elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar elm$time$Time$subMap = F2(\n\tfunction (f, _n0) {\n\t\tvar interval = _n0.a;\n\t\tvar tagger = _n0.b;\n\t\treturn A2(\n\t\t\telm$time$Time$Every,\n\t\t\tinterval,\n\t\t\tA2(elm$core$Basics$composeL, f, tagger));\n\t});\n_Platform_effectManagers['Time'] = _Platform_createManager(elm$time$Time$init, elm$time$Time$onEffects, elm$time$Time$onSelfMsg, 0, elm$time$Time$subMap);\nvar elm$time$Time$subscription = _Platform_leaf('Time');\nvar elm$time$Time$every = F2(\n\tfunction (interval, tagger) {\n\t\treturn elm$time$Time$subscription(\n\t\t\tA2(elm$time$Time$Every, interval, tagger));\n\t});\nvar ohanhi$keyboard$Keyboard$Down = function (a) {\n\treturn {$: 0, a: a};\n};\nvar ohanhi$keyboard$Keyboard$Up = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$browser$Browser$Events$Document = 0;\nvar elm$browser$Browser$Events$MySub = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar elm$browser$Browser$Events$State = F2(\n\tfunction (subs, pids) {\n\t\treturn {an: pids, az: subs};\n\t});\nvar elm$browser$Browser$Events$init = elm$core$Task$succeed(\n\tA2(elm$browser$Browser$Events$State, _List_Nil, elm$core$Dict$empty));\nvar elm$browser$Browser$Events$nodeToKey = function (node) {\n\tif (!node) {\n\t\treturn 'd_';\n\t} else {\n\t\treturn 'w_';\n\t}\n};\nvar elm$browser$Browser$Events$addKey = function (sub) {\n\tvar node = sub.a;\n\tvar name = sub.b;\n\treturn _Utils_Tuple2(\n\t\t_Utils_ap(\n\t\t\telm$browser$Browser$Events$nodeToKey(node),\n\t\t\tname),\n\t\tsub);\n};\nvar elm$browser$Browser$Events$Event = F2(\n\tfunction (key, event) {\n\t\treturn {ab: event, ai: key};\n\t});\nvar elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$browser$Browser$Dom$NotFound = elm$core$Basics$identity;\nvar elm$core$Basics$never = function (_n0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _n0;\n\t\tvar $temp$_n0 = nvr;\n\t\t_n0 = $temp$_n0;\n\t\tcontinue never;\n\t}\n};\nvar elm$core$Task$Perform = elm$core$Basics$identity;\nvar elm$core$Task$init = elm$core$Task$succeed(0);\nvar elm$core$Task$spawnCmd = F2(\n\tfunction (router, _n0) {\n\t\tvar task = _n0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar elm$core$Task$onSelfMsg = F3(\n\tfunction (_n0, _n1, _n2) {\n\t\treturn elm$core$Task$succeed(0);\n\t});\nvar elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _n0) {\n\t\tvar task = _n0;\n\t\treturn A2(elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager(elm$core$Task$init, elm$core$Task$onEffects, elm$core$Task$onSelfMsg, elm$core$Task$cmdMap);\nvar elm$core$Task$command = _Platform_leaf('Task');\nvar elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn elm$core$Task$command(\n\t\t\tA2(elm$core$Task$map, toMessage, task));\n\t});\nvar elm$json$Json$Decode$map = _Json_map1;\nvar elm$json$Json$Decode$map2 = _Json_map2;\nvar elm$json$Json$Decode$succeed = _Json_succeed;\nvar elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar elm$core$String$length = _String_length;\nvar elm$core$String$slice = _String_slice;\nvar elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\telm$core$String$slice,\n\t\t\tn,\n\t\t\telm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar elm$core$String$startsWith = _String_startsWith;\nvar elm$url$Url$Http = 0;\nvar elm$url$Url$Https = 1;\nvar elm$core$String$indexes = _String_indexes;\nvar elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(elm$core$String$slice, 0, n, string);\n\t});\nvar elm$core$String$contains = _String_contains;\nvar elm$core$String$toInt = _String_toInt;\nvar elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {ad: fragment, ah: host, am: path, ao: port_, as: protocol, at: query};\n\t});\nvar elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str) || A2(elm$core$String$contains, '@', str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, ':', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA6(elm$url$Url$Url, protocol, str, elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\tvar i = _n0.a;\n\t\t\t\t\tvar _n1 = elm$core$String$toInt(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _n1;\n\t\t\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\telm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2(elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '/', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A5(elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2(elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '?', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A4(elm$url$Url$chompBeforeQuery, protocol, elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\telm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '#', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A3(elm$url$Url$chompBeforeFragment, protocol, elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$fromString = function (str) {\n\treturn A2(elm$core$String$startsWith, 'http://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2(elm$core$String$dropLeft, 7, str)) : (A2(elm$core$String$startsWith, 'https://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2(elm$core$String$dropLeft, 8, str)) : elm$core$Maybe$Nothing);\n};\nvar elm$browser$Browser$Events$spawn = F3(\n\tfunction (router, key, _n0) {\n\t\tvar node = _n0.a;\n\t\tvar name = _n0.b;\n\t\tvar actualNode = function () {\n\t\t\tif (!node) {\n\t\t\t\treturn _Browser_doc;\n\t\t\t} else {\n\t\t\t\treturn _Browser_window;\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (value) {\n\t\t\t\treturn _Utils_Tuple2(key, value);\n\t\t\t},\n\t\t\tA3(\n\t\t\t\t_Browser_on,\n\t\t\t\tactualNode,\n\t\t\t\tname,\n\t\t\t\tfunction (event) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$Platform$sendToSelf,\n\t\t\t\t\t\trouter,\n\t\t\t\t\t\tA2(elm$browser$Browser$Events$Event, key, event));\n\t\t\t\t}));\n\t});\nvar elm$core$Dict$fromList = function (assocs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, dict) {\n\t\t\t\tvar key = _n0.a;\n\t\t\t\tvar value = _n0.b;\n\t\t\t\treturn A3(elm$core$Dict$insert, key, value, dict);\n\t\t\t}),\n\t\telm$core$Dict$empty,\n\t\tassocs);\n};\nvar elm$core$Dict$union = F2(\n\tfunction (t1, t2) {\n\t\treturn A3(elm$core$Dict$foldl, elm$core$Dict$insert, t2, t1);\n\t});\nvar elm$browser$Browser$Events$onEffects = F3(\n\tfunction (router, subs, state) {\n\t\tvar stepRight = F3(\n\t\t\tfunction (key, sub, _n6) {\n\t\t\t\tvar deads = _n6.a;\n\t\t\t\tvar lives = _n6.b;\n\t\t\t\tvar news = _n6.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tlives,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tA3(elm$browser$Browser$Events$spawn, router, key, sub),\n\t\t\t\t\t\tnews));\n\t\t\t});\n\t\tvar stepLeft = F3(\n\t\t\tfunction (_n4, pid, _n5) {\n\t\t\t\tvar deads = _n5.a;\n\t\t\t\tvar lives = _n5.b;\n\t\t\t\tvar news = _n5.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2(elm$core$List$cons, pid, deads),\n\t\t\t\t\tlives,\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar stepBoth = F4(\n\t\t\tfunction (key, pid, _n2, _n3) {\n\t\t\t\tvar deads = _n3.a;\n\t\t\t\tvar lives = _n3.b;\n\t\t\t\tvar news = _n3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tA3(elm$core$Dict$insert, key, pid, lives),\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar newSubs = A2(elm$core$List$map, elm$browser$Browser$Events$addKey, subs);\n\t\tvar _n0 = A6(\n\t\t\telm$core$Dict$merge,\n\t\t\tstepLeft,\n\t\t\tstepBoth,\n\t\t\tstepRight,\n\t\t\tstate.an,\n\t\t\telm$core$Dict$fromList(newSubs),\n\t\t\t_Utils_Tuple3(_List_Nil, elm$core$Dict$empty, _List_Nil));\n\t\tvar deadPids = _n0.a;\n\t\tvar livePids = _n0.b;\n\t\tvar makeNewPids = _n0.c;\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (pids) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$browser$Browser$Events$State,\n\t\t\t\t\t\tnewSubs,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$Dict$union,\n\t\t\t\t\t\t\tlivePids,\n\t\t\t\t\t\t\telm$core$Dict$fromList(pids))));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n1) {\n\t\t\t\t\treturn elm$core$Task$sequence(makeNewPids);\n\t\t\t\t},\n\t\t\t\telm$core$Task$sequence(\n\t\t\t\t\tA2(elm$core$List$map, elm$core$Process$kill, deadPids))));\n\t});\nvar elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _n0 = f(mx);\n\t\tif (!_n0.$) {\n\t\t\tvar x = _n0.a;\n\t\t\treturn A2(elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\telm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$browser$Browser$Events$onSelfMsg = F3(\n\tfunction (router, _n0, state) {\n\t\tvar key = _n0.ai;\n\t\tvar event = _n0.ab;\n\t\tvar toMessage = function (_n2) {\n\t\t\tvar subKey = _n2.a;\n\t\t\tvar _n3 = _n2.b;\n\t\t\tvar node = _n3.a;\n\t\t\tvar name = _n3.b;\n\t\t\tvar decoder = _n3.c;\n\t\t\treturn _Utils_eq(subKey, key) ? A2(_Browser_decodeEvent, decoder, event) : elm$core$Maybe$Nothing;\n\t\t};\n\t\tvar messages = A2(elm$core$List$filterMap, toMessage, state.az);\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (_n1) {\n\t\t\t\treturn elm$core$Task$succeed(state);\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\t\tmessages)));\n\t});\nvar elm$browser$Browser$Events$subMap = F2(\n\tfunction (func, _n0) {\n\t\tvar node = _n0.a;\n\t\tvar name = _n0.b;\n\t\tvar decoder = _n0.c;\n\t\treturn A3(\n\t\t\telm$browser$Browser$Events$MySub,\n\t\t\tnode,\n\t\t\tname,\n\t\t\tA2(elm$json$Json$Decode$map, func, decoder));\n\t});\n_Platform_effectManagers['Browser.Events'] = _Platform_createManager(elm$browser$Browser$Events$init, elm$browser$Browser$Events$onEffects, elm$browser$Browser$Events$onSelfMsg, 0, elm$browser$Browser$Events$subMap);\nvar elm$browser$Browser$Events$subscription = _Platform_leaf('Browser.Events');\nvar elm$browser$Browser$Events$on = F3(\n\tfunction (node, name, decoder) {\n\t\treturn elm$browser$Browser$Events$subscription(\n\t\t\tA3(elm$browser$Browser$Events$MySub, node, name, decoder));\n\t});\nvar elm$browser$Browser$Events$onKeyDown = A2(elm$browser$Browser$Events$on, 0, 'keydown');\nvar elm$json$Json$Decode$field = _Json_decodeField;\nvar elm$json$Json$Decode$string = _Json_decodeString;\nvar ohanhi$keyboard$Keyboard$RawKey = elm$core$Basics$identity;\nvar ohanhi$keyboard$Keyboard$eventKeyDecoder = A2(\n\telm$json$Json$Decode$field,\n\t'key',\n\tA2(elm$json$Json$Decode$map, elm$core$Basics$identity, elm$json$Json$Decode$string));\nvar ohanhi$keyboard$Keyboard$downs = function (toMsg) {\n\treturn elm$browser$Browser$Events$onKeyDown(\n\t\tA2(elm$json$Json$Decode$map, toMsg, ohanhi$keyboard$Keyboard$eventKeyDecoder));\n};\nvar elm$browser$Browser$Events$onKeyUp = A2(elm$browser$Browser$Events$on, 0, 'keyup');\nvar ohanhi$keyboard$Keyboard$ups = function (toMsg) {\n\treturn elm$browser$Browser$Events$onKeyUp(\n\t\tA2(elm$json$Json$Decode$map, toMsg, ohanhi$keyboard$Keyboard$eventKeyDecoder));\n};\nvar ohanhi$keyboard$Keyboard$subscriptions = elm$core$Platform$Sub$batch(\n\t_List_fromArray(\n\t\t[\n\t\t\tohanhi$keyboard$Keyboard$downs(ohanhi$keyboard$Keyboard$Down),\n\t\t\tohanhi$keyboard$Keyboard$ups(ohanhi$keyboard$Keyboard$Up)\n\t\t]));\nvar author$project$Main$subscriptions = function (model) {\n\treturn elm$core$Platform$Sub$batch(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(elm$core$Platform$Sub$map, author$project$Update$KeyMsg, ohanhi$keyboard$Keyboard$subscriptions),\n\t\t\t\tA2(elm$time$Time$every, author$project$Main$tickFrequency, author$project$Update$Tick)\n\t\t\t]));\n};\nvar elm$core$List$any = F2(\n\tfunction (isOkay, list) {\n\t\tany:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tif (isOkay(x)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$isOkay = isOkay,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tisOkay = $temp$isOkay;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue any;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$member = F2(\n\tfunction (x, xs) {\n\t\treturn A2(\n\t\t\telm$core$List$any,\n\t\t\tfunction (a) {\n\t\t\t\treturn _Utils_eq(a, x);\n\t\t\t},\n\t\t\txs);\n\t});\nvar author$project$Update$checkIfHitSelf = function (snake) {\n\treturn A2(elm$core$List$member, snake.ag, snake.W);\n};\nvar elm$core$List$takeReverse = F3(\n\tfunction (n, list, kept) {\n\t\ttakeReverse:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn kept;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn kept;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs,\n\t\t\t\t\t\t$temp$kept = A2(elm$core$List$cons, x, kept);\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tkept = $temp$kept;\n\t\t\t\t\tcontinue takeReverse;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$takeTailRec = F2(\n\tfunction (n, list) {\n\t\treturn elm$core$List$reverse(\n\t\t\tA3(elm$core$List$takeReverse, n, list, _List_Nil));\n\t});\nvar elm$core$List$takeFast = F3(\n\tfunction (ctr, n, list) {\n\t\tif (n <= 0) {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar _n0 = _Utils_Tuple2(n, list);\n\t\t\t_n0$1:\n\t\t\twhile (true) {\n\t\t\t\t_n0$5:\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\t\treturn list;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (_n0.b.b.b) {\n\t\t\t\t\t\t\tswitch (_n0.a) {\n\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\tbreak _n0$1;\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tvar _n2 = _n0.b;\n\t\t\t\t\t\t\t\t\tvar x = _n2.a;\n\t\t\t\t\t\t\t\t\tvar _n3 = _n2.b;\n\t\t\t\t\t\t\t\t\tvar y = _n3.a;\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[x, y]);\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tif (_n0.b.b.b.b) {\n\t\t\t\t\t\t\t\t\t\tvar _n4 = _n0.b;\n\t\t\t\t\t\t\t\t\t\tvar x = _n4.a;\n\t\t\t\t\t\t\t\t\t\tvar _n5 = _n4.b;\n\t\t\t\t\t\t\t\t\t\tvar y = _n5.a;\n\t\t\t\t\t\t\t\t\t\tvar _n6 = _n5.b;\n\t\t\t\t\t\t\t\t\t\tvar z = _n6.a;\n\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[x, y, z]);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _n0$5;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tif (_n0.b.b.b.b && _n0.b.b.b.b.b) {\n\t\t\t\t\t\t\t\t\t\tvar _n7 = _n0.b;\n\t\t\t\t\t\t\t\t\t\tvar x = _n7.a;\n\t\t\t\t\t\t\t\t\t\tvar _n8 = _n7.b;\n\t\t\t\t\t\t\t\t\t\tvar y = _n8.a;\n\t\t\t\t\t\t\t\t\t\tvar _n9 = _n8.b;\n\t\t\t\t\t\t\t\t\t\tvar z = _n9.a;\n\t\t\t\t\t\t\t\t\t\tvar _n10 = _n9.b;\n\t\t\t\t\t\t\t\t\t\tvar w = _n10.a;\n\t\t\t\t\t\t\t\t\t\tvar tl = _n10.b;\n\t\t\t\t\t\t\t\t\t\treturn (ctr > 1000) ? A2(\n\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\tz,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tw,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(elm$core$List$takeTailRec, n - 4, tl))))) : A2(\n\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\tz,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tw,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3(elm$core$List$takeFast, ctr + 1, n - 4, tl)))));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _n0$5;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_n0.a === 1) {\n\t\t\t\t\t\t\t\tbreak _n0$1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak _n0$5;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\tvar _n1 = _n0.b;\n\t\t\tvar x = _n1.a;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[x]);\n\t\t}\n\t});\nvar elm$core$List$take = F2(\n\tfunction (n, list) {\n\t\treturn A3(elm$core$List$takeFast, 0, n, list);\n\t});\nvar author$project$Update$removeLast = function (list) {\n\treturn A2(\n\t\telm$core$List$take,\n\t\telm$core$List$length(list) - 1,\n\t\tlist);\n};\nvar author$project$Update$updateBody = F2(\n\tfunction (snakeAteFood, _n0) {\n\t\tvar head = _n0.ag;\n\t\tvar body = _n0.W;\n\t\treturn snakeAteFood ? A2(elm$core$List$cons, head, body) : A2(\n\t\t\telm$core$List$cons,\n\t\t\thead,\n\t\t\tauthor$project$Update$removeLast(body));\n\t});\nvar author$project$Update$moveSnake = F3(\n\tfunction (newHead, snakeAteFood, snake) {\n\t\treturn _Utils_update(\n\t\t\tsnake,\n\t\t\t{\n\t\t\t\tW: A2(author$project$Update$updateBody, snakeAteFood, snake),\n\t\t\t\tag: newHead\n\t\t\t});\n\t});\nvar author$project$Model$Position = F2(\n\tfunction (x, y) {\n\t\treturn {C: x, D: y};\n\t});\nvar author$project$Update$NewFood = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$random$Random$Generate = elm$core$Basics$identity;\nvar elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar elm$random$Random$Seed = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$random$Random$next = function (_n0) {\n\tvar state0 = _n0.a;\n\tvar incr = _n0.b;\n\treturn A2(elm$random$Random$Seed, ((state0 * 1664525) + incr) >>> 0, incr);\n};\nvar elm$random$Random$initialSeed = function (x) {\n\tvar _n0 = elm$random$Random$next(\n\t\tA2(elm$random$Random$Seed, 0, 1013904223));\n\tvar state1 = _n0.a;\n\tvar incr = _n0.b;\n\tvar state2 = (state1 + x) >>> 0;\n\treturn elm$random$Random$next(\n\t\tA2(elm$random$Random$Seed, state2, incr));\n};\nvar elm$time$Time$posixToMillis = function (_n0) {\n\tvar millis = _n0;\n\treturn millis;\n};\nvar elm$random$Random$init = A2(\n\telm$core$Task$andThen,\n\tfunction (time) {\n\t\treturn elm$core$Task$succeed(\n\t\t\telm$random$Random$initialSeed(\n\t\t\t\telm$time$Time$posixToMillis(time)));\n\t},\n\telm$time$Time$now);\nvar elm$random$Random$step = F2(\n\tfunction (_n0, seed) {\n\t\tvar generator = _n0;\n\t\treturn generator(seed);\n\t});\nvar elm$random$Random$onEffects = F3(\n\tfunction (router, commands, seed) {\n\t\tif (!commands.b) {\n\t\t\treturn elm$core$Task$succeed(seed);\n\t\t} else {\n\t\t\tvar generator = commands.a;\n\t\t\tvar rest = commands.b;\n\t\t\tvar _n1 = A2(elm$random$Random$step, generator, seed);\n\t\t\tvar value = _n1.a;\n\t\t\tvar newSeed = _n1.b;\n\t\t\treturn A2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n2) {\n\t\t\t\t\treturn A3(elm$random$Random$onEffects, router, rest, newSeed);\n\t\t\t\t},\n\t\t\t\tA2(elm$core$Platform$sendToApp, router, value));\n\t\t}\n\t});\nvar elm$random$Random$onSelfMsg = F3(\n\tfunction (_n0, _n1, seed) {\n\t\treturn elm$core$Task$succeed(seed);\n\t});\nvar elm$random$Random$Generator = elm$core$Basics$identity;\nvar elm$random$Random$map = F2(\n\tfunction (func, _n0) {\n\t\tvar genA = _n0;\n\t\treturn function (seed0) {\n\t\t\tvar _n1 = genA(seed0);\n\t\t\tvar a = _n1.a;\n\t\t\tvar seed1 = _n1.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tfunc(a),\n\t\t\t\tseed1);\n\t\t};\n\t});\nvar elm$random$Random$cmdMap = F2(\n\tfunction (func, _n0) {\n\t\tvar generator = _n0;\n\t\treturn A2(elm$random$Random$map, func, generator);\n\t});\n_Platform_effectManagers['Random'] = _Platform_createManager(elm$random$Random$init, elm$random$Random$onEffects, elm$random$Random$onSelfMsg, elm$random$Random$cmdMap);\nvar elm$random$Random$command = _Platform_leaf('Random');\nvar elm$random$Random$generate = F2(\n\tfunction (tagger, generator) {\n\t\treturn elm$random$Random$command(\n\t\t\tA2(elm$random$Random$map, tagger, generator));\n\t});\nvar elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar elm$core$Bitwise$and = _Bitwise_and;\nvar elm$core$Bitwise$xor = _Bitwise_xor;\nvar elm$random$Random$peel = function (_n0) {\n\tvar state = _n0.a;\n\tvar word = (state ^ (state >>> ((state >>> 28) + 4))) * 277803737;\n\treturn ((word >>> 22) ^ word) >>> 0;\n};\nvar elm$random$Random$int = F2(\n\tfunction (a, b) {\n\t\treturn function (seed0) {\n\t\t\tvar _n0 = (_Utils_cmp(a, b) < 0) ? _Utils_Tuple2(a, b) : _Utils_Tuple2(b, a);\n\t\t\tvar lo = _n0.a;\n\t\t\tvar hi = _n0.b;\n\t\t\tvar range = (hi - lo) + 1;\n\t\t\tif (!((range - 1) & range)) {\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t(((range - 1) & elm$random$Random$peel(seed0)) >>> 0) + lo,\n\t\t\t\t\telm$random$Random$next(seed0));\n\t\t\t} else {\n\t\t\t\tvar threshhold = (((-range) >>> 0) % range) >>> 0;\n\t\t\t\tvar accountForBias = function (seed) {\n\t\t\t\t\taccountForBias:\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tvar x = elm$random$Random$peel(seed);\n\t\t\t\t\t\tvar seedN = elm$random$Random$next(seed);\n\t\t\t\t\t\tif (_Utils_cmp(x, threshhold) < 0) {\n\t\t\t\t\t\t\tvar $temp$seed = seedN;\n\t\t\t\t\t\t\tseed = $temp$seed;\n\t\t\t\t\t\t\tcontinue accountForBias;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn _Utils_Tuple2((x % range) + lo, seedN);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treturn accountForBias(seed0);\n\t\t\t}\n\t\t};\n\t});\nvar elm$random$Random$map2 = F3(\n\tfunction (func, _n0, _n1) {\n\t\tvar genA = _n0;\n\t\tvar genB = _n1;\n\t\treturn function (seed0) {\n\t\t\tvar _n2 = genA(seed0);\n\t\t\tvar a = _n2.a;\n\t\t\tvar seed1 = _n2.b;\n\t\t\tvar _n3 = genB(seed1);\n\t\t\tvar b = _n3.a;\n\t\t\tvar seed2 = _n3.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tA2(func, a, b),\n\t\t\t\tseed2);\n\t\t};\n\t});\nvar author$project$Update$repositionFood = function (snakeAteFood) {\n\treturn snakeAteFood ? A2(\n\t\telm$random$Random$generate,\n\t\tauthor$project$Update$NewFood,\n\t\tA3(\n\t\t\telm$random$Random$map2,\n\t\t\tauthor$project$Model$Position,\n\t\t\tA2(elm$random$Random$int, 0, 39),\n\t\t\tA2(elm$random$Random$int, 0, 19))) : elm$core$Platform$Cmd$none;\n};\nvar author$project$Update$updateHead = function (_n0) {\n\tvar head = _n0.ag;\n\tvar direction = _n0._;\n\tswitch (direction) {\n\t\tcase 0:\n\t\t\treturn ((head.D - 1) < 0) ? _Utils_update(\n\t\t\t\thead,\n\t\t\t\t{D: 19}) : _Utils_update(\n\t\t\t\thead,\n\t\t\t\t{D: head.D - 1});\n\t\tcase 2:\n\t\t\treturn ((head.C + 1) > 39) ? _Utils_update(\n\t\t\t\thead,\n\t\t\t\t{C: 0}) : _Utils_update(\n\t\t\t\thead,\n\t\t\t\t{C: head.C + 1});\n\t\tcase 4:\n\t\t\treturn ((head.D + 1) > 19) ? _Utils_update(\n\t\t\t\thead,\n\t\t\t\t{D: 0}) : _Utils_update(\n\t\t\t\thead,\n\t\t\t\t{D: head.D + 1});\n\t\tcase 6:\n\t\t\treturn ((head.C - 1) < 0) ? _Utils_update(\n\t\t\t\thead,\n\t\t\t\t{C: 39}) : _Utils_update(\n\t\t\t\thead,\n\t\t\t\t{C: head.C - 1});\n\t\tdefault:\n\t\t\treturn head;\n\t}\n};\nvar author$project$Update$runLoop = function (model) {\n\tvar newHead = author$project$Update$updateHead(model.ay);\n\tvar snakeAteFood = _Utils_eq(newHead, model.ac);\n\tvar newSnake = A3(author$project$Update$moveSnake, newHead, snakeAteFood, model.ay);\n\treturn _Utils_Tuple2(\n\t\t_Utils_update(\n\t\t\tmodel,\n\t\t\t{\n\t\t\t\tae: author$project$Update$checkIfHitSelf(newSnake),\n\t\t\t\tay: newSnake\n\t\t\t}),\n\t\tauthor$project$Update$repositionFood(snakeAteFood));\n};\nvar ohanhi$keyboard$Keyboard$ArrowDown = {$: 18};\nvar ohanhi$keyboard$Keyboard$ArrowLeft = {$: 19};\nvar ohanhi$keyboard$Keyboard$ArrowRight = {$: 20};\nvar ohanhi$keyboard$Keyboard$ArrowUp = {$: 21};\nvar ohanhi$keyboard$Keyboard$Arrows$boolToInt = function (bool) {\n\treturn bool ? 1 : 0;\n};\nvar ohanhi$keyboard$Keyboard$Arrows$arrows = function (keys) {\n\tvar toInt = function (key) {\n\t\treturn ohanhi$keyboard$Keyboard$Arrows$boolToInt(\n\t\t\tA2(elm$core$List$member, key, keys));\n\t};\n\tvar x = toInt(ohanhi$keyboard$Keyboard$ArrowRight) - toInt(ohanhi$keyboard$Keyboard$ArrowLeft);\n\tvar y = toInt(ohanhi$keyboard$Keyboard$ArrowUp) - toInt(ohanhi$keyboard$Keyboard$ArrowDown);\n\treturn {C: x, D: y};\n};\nvar ohanhi$keyboard$Keyboard$Arrows$NoDirection = 8;\nvar ohanhi$keyboard$Keyboard$Arrows$North = 0;\nvar ohanhi$keyboard$Keyboard$Arrows$NorthEast = 1;\nvar ohanhi$keyboard$Keyboard$Arrows$NorthWest = 7;\nvar ohanhi$keyboard$Keyboard$Arrows$South = 4;\nvar ohanhi$keyboard$Keyboard$Arrows$SouthEast = 3;\nvar ohanhi$keyboard$Keyboard$Arrows$SouthWest = 5;\nvar ohanhi$keyboard$Keyboard$Arrows$West = 6;\nvar ohanhi$keyboard$Keyboard$Arrows$arrowsToDir = function (_n0) {\n\tvar x = _n0.C;\n\tvar y = _n0.D;\n\tvar y1 = y + 1;\n\tvar x1 = x + 1;\n\tvar _n1 = _Utils_Tuple2(x1, y1);\n\t_n1$8:\n\twhile (true) {\n\t\tswitch (_n1.a) {\n\t\t\tcase 2:\n\t\t\t\tswitch (_n1.b) {\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn 2;\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturn 3;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak _n1$8;\n\t\t\t\t}\n\t\t\tcase 1:\n\t\t\t\tswitch (_n1.b) {\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturn 4;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak _n1$8;\n\t\t\t\t}\n\t\t\tcase 0:\n\t\t\t\tswitch (_n1.b) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturn 5;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn 6;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturn 7;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak _n1$8;\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tbreak _n1$8;\n\t\t}\n\t}\n\treturn 8;\n};\nvar ohanhi$keyboard$Keyboard$Arrows$arrowsDirection = A2(elm$core$Basics$composeL, ohanhi$keyboard$Keyboard$Arrows$arrowsToDir, ohanhi$keyboard$Keyboard$Arrows$arrows);\nvar author$project$Update$getDirection = function (pressedKeys) {\n\treturn ohanhi$keyboard$Keyboard$Arrows$arrowsDirection(pressedKeys);\n};\nvar author$project$Update$validateDirectionExists = function (direction) {\n\treturn A2(\n\t\telm$core$List$member,\n\t\tdirection,\n\t\t_List_fromArray(\n\t\t\t[0, 2, 4, 6])) ? elm$core$Maybe$Just(direction) : elm$core$Maybe$Nothing;\n};\nvar author$project$Update$validateDirectionIsValid = F2(\n\tfunction (snake, direction) {\n\t\tvar _n0 = _Utils_Tuple2(snake._, direction);\n\t\t_n0$4:\n\t\twhile (true) {\n\t\t\tif (!_n0.b.$) {\n\t\t\t\tswitch (_n0.a) {\n\t\t\t\t\tcase 6:\n\t\t\t\t\t\tif (_n0.b.a === 2) {\n\t\t\t\t\t\t\tvar _n1 = _n0.a;\n\t\t\t\t\t\t\tvar _n2 = _n0.b.a;\n\t\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak _n0$4;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tif (_n0.b.a === 6) {\n\t\t\t\t\t\t\tvar _n3 = _n0.a;\n\t\t\t\t\t\t\tvar _n4 = _n0.b.a;\n\t\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak _n0$4;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tif (_n0.b.a === 4) {\n\t\t\t\t\t\t\tvar _n5 = _n0.a;\n\t\t\t\t\t\t\tvar _n6 = _n0.b.a;\n\t\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak _n0$4;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tif (!_n0.b.a) {\n\t\t\t\t\t\t\tvar _n7 = _n0.a;\n\t\t\t\t\t\t\tvar _n8 = _n0.b.a;\n\t\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak _n0$4;\n\t\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak _n0$4;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbreak _n0$4;\n\t\t\t}\n\t\t}\n\t\treturn direction;\n\t});\nvar author$project$Update$updateSnakeDirection = F2(\n\tfunction (pressedKeys, snake) {\n\t\tvar direction = A2(\n\t\t\tauthor$project$Update$validateDirectionIsValid,\n\t\t\tsnake,\n\t\t\tauthor$project$Update$validateDirectionExists(\n\t\t\t\tauthor$project$Update$getDirection(pressedKeys)));\n\t\tif (!direction.$) {\n\t\t\tvar validDirection = direction.a;\n\t\t\treturn _Utils_update(\n\t\t\t\tsnake,\n\t\t\t\t{_: validDirection});\n\t\t} else {\n\t\t\treturn snake;\n\t\t}\n\t});\nvar ohanhi$keyboard$Keyboard$Backspace = {$: 26};\nvar ohanhi$keyboard$Keyboard$Clear = {$: 27};\nvar ohanhi$keyboard$Keyboard$Copy = {$: 28};\nvar ohanhi$keyboard$Keyboard$CrSel = {$: 29};\nvar ohanhi$keyboard$Keyboard$Cut = {$: 30};\nvar ohanhi$keyboard$Keyboard$Delete = {$: 31};\nvar ohanhi$keyboard$Keyboard$EraseEof = {$: 32};\nvar ohanhi$keyboard$Keyboard$ExSel = {$: 33};\nvar ohanhi$keyboard$Keyboard$Insert = {$: 34};\nvar ohanhi$keyboard$Keyboard$Paste = {$: 35};\nvar ohanhi$keyboard$Keyboard$Redo = {$: 36};\nvar ohanhi$keyboard$Keyboard$Undo = {$: 37};\nvar ohanhi$keyboard$Keyboard$editingKey = function (_n0) {\n\tvar value = _n0;\n\tswitch (value) {\n\t\tcase 'Backspace':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Backspace);\n\t\tcase 'Clear':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Clear);\n\t\tcase 'Copy':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Copy);\n\t\tcase 'CrSel':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$CrSel);\n\t\tcase 'Cut':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Cut);\n\t\tcase 'Delete':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Delete);\n\t\tcase 'EraseEof':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$EraseEof);\n\t\tcase 'ExSel':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ExSel);\n\t\tcase 'Insert':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Insert);\n\t\tcase 'Paste':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Paste);\n\t\tcase 'Redo':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Redo);\n\t\tcase 'Undo':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Undo);\n\t\tdefault:\n\t\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar ohanhi$keyboard$Keyboard$F1 = {$: 38};\nvar ohanhi$keyboard$Keyboard$F10 = {$: 47};\nvar ohanhi$keyboard$Keyboard$F11 = {$: 48};\nvar ohanhi$keyboard$Keyboard$F12 = {$: 49};\nvar ohanhi$keyboard$Keyboard$F13 = {$: 50};\nvar ohanhi$keyboard$Keyboard$F14 = {$: 51};\nvar ohanhi$keyboard$Keyboard$F15 = {$: 52};\nvar ohanhi$keyboard$Keyboard$F16 = {$: 53};\nvar ohanhi$keyboard$Keyboard$F17 = {$: 54};\nvar ohanhi$keyboard$Keyboard$F18 = {$: 55};\nvar ohanhi$keyboard$Keyboard$F19 = {$: 56};\nvar ohanhi$keyboard$Keyboard$F2 = {$: 39};\nvar ohanhi$keyboard$Keyboard$F20 = {$: 57};\nvar ohanhi$keyboard$Keyboard$F3 = {$: 40};\nvar ohanhi$keyboard$Keyboard$F4 = {$: 41};\nvar ohanhi$keyboard$Keyboard$F5 = {$: 42};\nvar ohanhi$keyboard$Keyboard$F6 = {$: 43};\nvar ohanhi$keyboard$Keyboard$F7 = {$: 44};\nvar ohanhi$keyboard$Keyboard$F8 = {$: 45};\nvar ohanhi$keyboard$Keyboard$F9 = {$: 46};\nvar ohanhi$keyboard$Keyboard$functionKey = function (_n0) {\n\tvar value = _n0;\n\tswitch (value) {\n\t\tcase 'F1':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F1);\n\t\tcase 'F2':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F2);\n\t\tcase 'F3':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F3);\n\t\tcase 'F4':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F4);\n\t\tcase 'F5':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F5);\n\t\tcase 'F6':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F6);\n\t\tcase 'F7':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F7);\n\t\tcase 'F8':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F8);\n\t\tcase 'F9':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F9);\n\t\tcase 'F10':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F10);\n\t\tcase 'F11':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F11);\n\t\tcase 'F12':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F12);\n\t\tcase 'F13':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F13);\n\t\tcase 'F14':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F14);\n\t\tcase 'F15':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F15);\n\t\tcase 'F16':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F16);\n\t\tcase 'F17':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F17);\n\t\tcase 'F18':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F18);\n\t\tcase 'F19':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F19);\n\t\tcase 'F20':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F20);\n\t\tdefault:\n\t\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar ohanhi$keyboard$Keyboard$ChannelDown = {$: 85};\nvar ohanhi$keyboard$Keyboard$ChannelUp = {$: 86};\nvar ohanhi$keyboard$Keyboard$MediaFastForward = {$: 87};\nvar ohanhi$keyboard$Keyboard$MediaPause = {$: 88};\nvar ohanhi$keyboard$Keyboard$MediaPlay = {$: 89};\nvar ohanhi$keyboard$Keyboard$MediaPlayPause = {$: 90};\nvar ohanhi$keyboard$Keyboard$MediaRecord = {$: 91};\nvar ohanhi$keyboard$Keyboard$MediaRewind = {$: 92};\nvar ohanhi$keyboard$Keyboard$MediaStop = {$: 93};\nvar ohanhi$keyboard$Keyboard$MediaTrackNext = {$: 94};\nvar ohanhi$keyboard$Keyboard$MediaTrackPrevious = {$: 95};\nvar ohanhi$keyboard$Keyboard$mediaKey = function (_n0) {\n\tvar value = _n0;\n\tswitch (value) {\n\t\tcase 'ChannelDown':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ChannelDown);\n\t\tcase 'ChannelUp':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ChannelUp);\n\t\tcase 'MediaFastForward':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$MediaFastForward);\n\t\tcase 'MediaPause':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$MediaPause);\n\t\tcase 'MediaPlay':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$MediaPlay);\n\t\tcase 'MediaPlayPause':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$MediaPlayPause);\n\t\tcase 'MediaRecord':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$MediaRecord);\n\t\tcase 'MediaRewind':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$MediaRewind);\n\t\tcase 'MediaStop':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$MediaStop);\n\t\tcase 'MediaTrackNext':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$MediaTrackNext);\n\t\tcase 'MediaTrackPrevious':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$MediaTrackPrevious);\n\t\tdefault:\n\t\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar ohanhi$keyboard$Keyboard$Alt = {$: 1};\nvar ohanhi$keyboard$Keyboard$AltGraph = {$: 2};\nvar ohanhi$keyboard$Keyboard$CapsLock = {$: 3};\nvar ohanhi$keyboard$Keyboard$Control = {$: 4};\nvar ohanhi$keyboard$Keyboard$Fn = {$: 5};\nvar ohanhi$keyboard$Keyboard$FnLock = {$: 6};\nvar ohanhi$keyboard$Keyboard$Hyper = {$: 7};\nvar ohanhi$keyboard$Keyboard$Meta = {$: 8};\nvar ohanhi$keyboard$Keyboard$NumLock = {$: 9};\nvar ohanhi$keyboard$Keyboard$ScrollLock = {$: 10};\nvar ohanhi$keyboard$Keyboard$Shift = {$: 11};\nvar ohanhi$keyboard$Keyboard$Super = {$: 12};\nvar ohanhi$keyboard$Keyboard$Symbol = {$: 13};\nvar ohanhi$keyboard$Keyboard$SymbolLock = {$: 14};\nvar ohanhi$keyboard$Keyboard$modifierKey = function (_n0) {\n\tvar value = _n0;\n\tswitch (value) {\n\t\tcase 'Alt':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Alt);\n\t\tcase 'AltGraph':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$AltGraph);\n\t\tcase 'CapsLock':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$CapsLock);\n\t\tcase 'Control':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Control);\n\t\tcase 'Fn':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Fn);\n\t\tcase 'FnLock':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$FnLock);\n\t\tcase 'Hyper':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Hyper);\n\t\tcase 'Meta':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Meta);\n\t\tcase 'NumLock':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$NumLock);\n\t\tcase 'ScrollLock':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ScrollLock);\n\t\tcase 'Shift':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Shift);\n\t\tcase 'Super':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Super);\n\t\tcase 'OS':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Super);\n\t\tcase 'Symbol':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Symbol);\n\t\tcase 'SymbolLock':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$SymbolLock);\n\t\tdefault:\n\t\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar ohanhi$keyboard$Keyboard$End = {$: 22};\nvar ohanhi$keyboard$Keyboard$Home = {$: 23};\nvar ohanhi$keyboard$Keyboard$PageDown = {$: 24};\nvar ohanhi$keyboard$Keyboard$PageUp = {$: 25};\nvar ohanhi$keyboard$Keyboard$navigationKey = function (_n0) {\n\tvar value = _n0;\n\tswitch (value) {\n\t\tcase 'ArrowDown':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ArrowDown);\n\t\tcase 'ArrowLeft':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ArrowLeft);\n\t\tcase 'ArrowRight':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ArrowRight);\n\t\tcase 'ArrowUp':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ArrowUp);\n\t\tcase 'Down':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ArrowDown);\n\t\tcase 'Left':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ArrowLeft);\n\t\tcase 'Right':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ArrowRight);\n\t\tcase 'Up':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ArrowUp);\n\t\tcase 'End':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$End);\n\t\tcase 'Home':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Home);\n\t\tcase 'PageDown':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$PageDown);\n\t\tcase 'PageUp':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$PageUp);\n\t\tdefault:\n\t\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar ohanhi$keyboard$Keyboard$oneOf = F2(\n\tfunction (fns, key) {\n\t\toneOf:\n\t\twhile (true) {\n\t\t\tif (!fns.b) {\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar fn = fns.a;\n\t\t\t\tvar rest = fns.b;\n\t\t\t\tvar _n1 = fn(key);\n\t\t\t\tif (!_n1.$) {\n\t\t\t\t\tvar a = _n1.a;\n\t\t\t\t\treturn elm$core$Maybe$Just(a);\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$fns = rest,\n\t\t\t\t\t\t$temp$key = key;\n\t\t\t\t\tfns = $temp$fns;\n\t\t\t\t\tkey = $temp$key;\n\t\t\t\t\tcontinue oneOf;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar ohanhi$keyboard$Keyboard$AppSwitch = {$: 73};\nvar ohanhi$keyboard$Keyboard$Call = {$: 74};\nvar ohanhi$keyboard$Keyboard$Camera = {$: 75};\nvar ohanhi$keyboard$Keyboard$CameraFocus = {$: 76};\nvar ohanhi$keyboard$Keyboard$EndCall = {$: 77};\nvar ohanhi$keyboard$Keyboard$GoBack = {$: 78};\nvar ohanhi$keyboard$Keyboard$GoHome = {$: 79};\nvar ohanhi$keyboard$Keyboard$HeadsetHook = {$: 80};\nvar ohanhi$keyboard$Keyboard$LastNumberRedial = {$: 81};\nvar ohanhi$keyboard$Keyboard$MannerMode = {$: 83};\nvar ohanhi$keyboard$Keyboard$Notification = {$: 82};\nvar ohanhi$keyboard$Keyboard$VoiceDial = {$: 84};\nvar ohanhi$keyboard$Keyboard$phoneKey = function (_n0) {\n\tvar value = _n0;\n\tswitch (value) {\n\t\tcase 'AppSwitch':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$AppSwitch);\n\t\tcase 'Call':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Call);\n\t\tcase 'Camera':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Camera);\n\t\tcase 'CameraFocus':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$CameraFocus);\n\t\tcase 'EndCall':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$EndCall);\n\t\tcase 'GoBack':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$GoBack);\n\t\tcase 'GoHome':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$GoHome);\n\t\tcase 'HeadsetHook':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$HeadsetHook);\n\t\tcase 'LastNumberRedial':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$LastNumberRedial);\n\t\tcase 'Notification':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Notification);\n\t\tcase 'MannerMode':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$MannerMode);\n\t\tcase 'VoiceDial':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$VoiceDial);\n\t\tdefault:\n\t\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar ohanhi$keyboard$Keyboard$Again = {$: 58};\nvar ohanhi$keyboard$Keyboard$Attn = {$: 59};\nvar ohanhi$keyboard$Keyboard$Cancel = {$: 60};\nvar ohanhi$keyboard$Keyboard$ContextMenu = {$: 61};\nvar ohanhi$keyboard$Keyboard$Escape = {$: 62};\nvar ohanhi$keyboard$Keyboard$Execute = {$: 63};\nvar ohanhi$keyboard$Keyboard$Find = {$: 64};\nvar ohanhi$keyboard$Keyboard$Finish = {$: 65};\nvar ohanhi$keyboard$Keyboard$Help = {$: 66};\nvar ohanhi$keyboard$Keyboard$Pause = {$: 67};\nvar ohanhi$keyboard$Keyboard$Play = {$: 68};\nvar ohanhi$keyboard$Keyboard$Props = {$: 69};\nvar ohanhi$keyboard$Keyboard$Select = {$: 70};\nvar ohanhi$keyboard$Keyboard$ZoomIn = {$: 71};\nvar ohanhi$keyboard$Keyboard$ZoomOut = {$: 72};\nvar ohanhi$keyboard$Keyboard$uiKey = function (_n0) {\n\tvar value = _n0;\n\tswitch (value) {\n\t\tcase 'Again':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Again);\n\t\tcase 'Attn':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Attn);\n\t\tcase 'Cancel':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Cancel);\n\t\tcase 'ContextMenu':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ContextMenu);\n\t\tcase 'Escape':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Escape);\n\t\tcase 'Execute':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Execute);\n\t\tcase 'Find':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Find);\n\t\tcase 'Finish':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Finish);\n\t\tcase 'Help':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Help);\n\t\tcase 'Pause':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Pause);\n\t\tcase 'Play':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Play);\n\t\tcase 'Props':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Props);\n\t\tcase 'Select':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Select);\n\t\tcase 'ZoomIn':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ZoomIn);\n\t\tcase 'ZoomOut':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ZoomOut);\n\t\tdefault:\n\t\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar ohanhi$keyboard$Keyboard$Enter = {$: 15};\nvar ohanhi$keyboard$Keyboard$Spacebar = {$: 17};\nvar ohanhi$keyboard$Keyboard$Tab = {$: 16};\nvar ohanhi$keyboard$Keyboard$whitespaceKey = function (_n0) {\n\tvar value = _n0;\n\tswitch (value) {\n\t\tcase 'Enter':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Enter);\n\t\tcase 'Tab':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Tab);\n\t\tcase 'Spacebar':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Spacebar);\n\t\tcase ' ':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Spacebar);\n\t\tdefault:\n\t\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar ohanhi$keyboard$Keyboard$anyKeyWith = function (charParser) {\n\treturn ohanhi$keyboard$Keyboard$oneOf(\n\t\t_List_fromArray(\n\t\t\t[ohanhi$keyboard$Keyboard$whitespaceKey, charParser, ohanhi$keyboard$Keyboard$modifierKey, ohanhi$keyboard$Keyboard$navigationKey, ohanhi$keyboard$Keyboard$editingKey, ohanhi$keyboard$Keyboard$functionKey, ohanhi$keyboard$Keyboard$uiKey, ohanhi$keyboard$Keyboard$phoneKey, ohanhi$keyboard$Keyboard$mediaKey]));\n};\nvar elm$core$String$toUpper = _String_toUpper;\nvar ohanhi$keyboard$Keyboard$Character = function (a) {\n\treturn {$: 0, a: a};\n};\nvar ohanhi$keyboard$Keyboard$characterKeyUpper = function (_n0) {\n\tvar value = _n0;\n\treturn (elm$core$String$length(value) === 1) ? elm$core$Maybe$Just(\n\t\tohanhi$keyboard$Keyboard$Character(\n\t\t\telm$core$String$toUpper(value))) : elm$core$Maybe$Nothing;\n};\nvar ohanhi$keyboard$Keyboard$anyKeyUpper = ohanhi$keyboard$Keyboard$anyKeyWith(ohanhi$keyboard$Keyboard$characterKeyUpper);\nvar elm$core$Basics$neq = _Utils_notEqual;\nvar elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2(elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar ohanhi$keyboard$Keyboard$insert = F3(\n\tfunction (keyParser, rawKey, list) {\n\t\tvar _n0 = keyParser(rawKey);\n\t\tif (!_n0.$) {\n\t\t\tvar key = _n0.a;\n\t\t\treturn A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\tkey,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$filter,\n\t\t\t\t\telm$core$Basics$neq(key),\n\t\t\t\t\tlist));\n\t\t} else {\n\t\t\treturn list;\n\t\t}\n\t});\nvar ohanhi$keyboard$Keyboard$remove = F3(\n\tfunction (keyParser, rawKey, list) {\n\t\tvar _n0 = keyParser(rawKey);\n\t\tif (!_n0.$) {\n\t\t\tvar key = _n0.a;\n\t\t\treturn A2(\n\t\t\t\telm$core$List$filter,\n\t\t\t\telm$core$Basics$neq(key),\n\t\t\t\tlist);\n\t\t} else {\n\t\t\treturn list;\n\t\t}\n\t});\nvar ohanhi$keyboard$Keyboard$updateWithParser = F3(\n\tfunction (keyParser, msg, state) {\n\t\tif (!msg.$) {\n\t\t\tvar key = msg.a;\n\t\t\treturn A3(ohanhi$keyboard$Keyboard$insert, keyParser, key, state);\n\t\t} else {\n\t\t\tvar key = msg.a;\n\t\t\treturn A3(ohanhi$keyboard$Keyboard$remove, keyParser, key, state);\n\t\t}\n\t});\nvar ohanhi$keyboard$Keyboard$update = ohanhi$keyboard$Keyboard$updateWithParser(ohanhi$keyboard$Keyboard$anyKeyUpper);\nvar author$project$Update$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 0:\n\t\t\t\tvar time = msg.a;\n\t\t\t\treturn model.ae ? _Utils_Tuple2(model, elm$core$Platform$Cmd$none) : author$project$Update$runLoop(model);\n\t\t\tcase 1:\n\t\t\t\tvar keyMsg = msg.a;\n\t\t\t\tvar newPressedKeys = A2(ohanhi$keyboard$Keyboard$update, keyMsg, model.ap);\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tap: newPressedKeys,\n\t\t\t\t\t\t\tay: A2(author$project$Update$updateSnakeDirection, newPressedKeys, model.ay)\n\t\t\t\t\t\t}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tdefault:\n\t\t\t\tvar food = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{ac: food}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar author$project$Model$Size = F2(\n\tfunction (width, height) {\n\t\treturn {aL: height, a_: width};\n\t});\nvar author$project$View$cellSize = A2(author$project$Model$Size, 20, 20);\nvar author$project$View$gridSize = A2(author$project$Model$Size, 40, 20);\nvar elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');\nvar elm$svg$Svg$rect = elm$svg$Svg$trustedNode('rect');\nvar elm$svg$Svg$Attributes$height = _VirtualDom_attribute('height');\nvar elm$svg$Svg$Attributes$style = _VirtualDom_attribute('style');\nvar elm$svg$Svg$Attributes$width = _VirtualDom_attribute('width');\nvar author$project$View$renderBackground = _List_fromArray(\n\t[\n\t\tA2(\n\t\telm$svg$Svg$rect,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$svg$Svg$Attributes$width(\n\t\t\t\telm$core$String$fromInt(author$project$View$gridSize.a_ * author$project$View$cellSize.aL)),\n\t\t\t\telm$svg$Svg$Attributes$height(\n\t\t\t\telm$core$String$fromInt(author$project$View$gridSize.aL * author$project$View$cellSize.aL)),\n\t\t\t\telm$svg$Svg$Attributes$style('fill:#8cbf00')\n\t\t\t]),\n\t\t_List_Nil)\n\t]);\nvar elm$svg$Svg$circle = elm$svg$Svg$trustedNode('circle');\nvar elm$svg$Svg$Attributes$cx = _VirtualDom_attribute('cx');\nvar elm$svg$Svg$Attributes$cy = _VirtualDom_attribute('cy');\nvar elm$svg$Svg$Attributes$fill = _VirtualDom_attribute('fill');\nvar elm$svg$Svg$Attributes$r = _VirtualDom_attribute('r');\nvar elm$svg$Svg$Attributes$stroke = _VirtualDom_attribute('stroke');\nvar author$project$View$renderFood = function (food) {\n\treturn _List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\telm$svg$Svg$circle,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$svg$Svg$Attributes$cx(\n\t\t\t\t\telm$core$String$fromInt((food.C * author$project$View$cellSize.a_) + ((author$project$View$cellSize.a_ / 2) | 0))),\n\t\t\t\t\telm$svg$Svg$Attributes$cy(\n\t\t\t\t\telm$core$String$fromInt((food.D * author$project$View$cellSize.aL) + ((author$project$View$cellSize.aL / 2) | 0))),\n\t\t\t\t\telm$svg$Svg$Attributes$r(\n\t\t\t\t\telm$core$String$fromInt((author$project$View$cellSize.aL / 3) | 0)),\n\t\t\t\t\telm$svg$Svg$Attributes$fill('black'),\n\t\t\t\t\telm$svg$Svg$Attributes$stroke('gray')\n\t\t\t\t]),\n\t\t\t_List_Nil)\n\t\t]);\n};\nvar elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar elm$svg$Svg$text = elm$virtual_dom$VirtualDom$text;\nvar elm$svg$Svg$text_ = elm$svg$Svg$trustedNode('text');\nvar elm$svg$Svg$Attributes$fontSize = _VirtualDom_attribute('font-size');\nvar elm$svg$Svg$Attributes$fontWeight = _VirtualDom_attribute('font-weight');\nvar elm$svg$Svg$Attributes$textAnchor = _VirtualDom_attribute('text-anchor');\nvar elm$svg$Svg$Attributes$x = _VirtualDom_attribute('x');\nvar elm$svg$Svg$Attributes$y = _VirtualDom_attribute('y');\nvar author$project$View$renderGameOver = function (gameOver) {\n\treturn A2(\n\t\telm$core$List$filter,\n\t\tfunction (_n0) {\n\t\t\treturn gameOver;\n\t\t},\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$svg$Svg$text_,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$Attributes$x(\n\t\t\t\t\t\telm$core$String$fromInt(((author$project$View$gridSize.a_ * author$project$View$cellSize.a_) / 2) | 0)),\n\t\t\t\t\t\telm$svg$Svg$Attributes$y(\n\t\t\t\t\t\telm$core$String$fromInt(((author$project$View$gridSize.aL * author$project$View$cellSize.aL) / 2) | 0)),\n\t\t\t\t\t\telm$svg$Svg$Attributes$textAnchor('middle'),\n\t\t\t\t\t\telm$svg$Svg$Attributes$fill('red'),\n\t\t\t\t\t\telm$svg$Svg$Attributes$fontWeight('bold'),\n\t\t\t\t\t\telm$svg$Svg$Attributes$fontSize('100')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$text('GAME OVER')\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar author$project$View$renderSnakePart = function (position) {\n\treturn A2(\n\t\telm$svg$Svg$rect,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$svg$Svg$Attributes$width(\n\t\t\t\telm$core$String$fromInt(author$project$View$cellSize.a_)),\n\t\t\t\telm$svg$Svg$Attributes$height(\n\t\t\t\telm$core$String$fromInt(author$project$View$cellSize.aL)),\n\t\t\t\telm$svg$Svg$Attributes$x(\n\t\t\t\telm$core$String$fromInt(position.C * author$project$View$cellSize.a_)),\n\t\t\t\telm$svg$Svg$Attributes$y(\n\t\t\t\telm$core$String$fromInt(position.D * author$project$View$cellSize.aL)),\n\t\t\t\telm$svg$Svg$Attributes$style('fill:black;stroke:gray')\n\t\t\t]),\n\t\t_List_Nil);\n};\nvar author$project$View$renderSnake = function (snake) {\n\treturn A2(\n\t\telm$core$List$cons,\n\t\tauthor$project$View$renderSnakePart(snake.ag),\n\t\tA2(elm$core$List$map, author$project$View$renderSnakePart, snake.W));\n};\nvar elm$html$Html$div = _VirtualDom_node('div');\nvar elm$html$Html$h1 = _VirtualDom_node('h1');\nvar elm$html$Html$text = elm$virtual_dom$VirtualDom$text;\nvar elm$svg$Svg$svg = elm$svg$Svg$trustedNode('svg');\nvar elm$svg$Svg$Attributes$viewBox = _VirtualDom_attribute('viewBox');\nvar author$project$View$view = function (model) {\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$h1,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text('snek')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\telm$svg$Svg$svg,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$Attributes$width('50%'),\n\t\t\t\t\t\telm$svg$Svg$Attributes$viewBox(\n\t\t\t\t\t\t'0 0 ' + (elm$core$String$fromInt(author$project$View$gridSize.a_ * author$project$View$cellSize.a_) + (' ' + elm$core$String$fromInt(author$project$View$gridSize.aL * author$project$View$cellSize.aL))))\n\t\t\t\t\t]),\n\t\t\t\t_Utils_ap(\n\t\t\t\t\tauthor$project$View$renderBackground,\n\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\tauthor$project$View$renderSnake(model.ay),\n\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\tauthor$project$View$renderFood(model.ac),\n\t\t\t\t\t\t\tauthor$project$View$renderGameOver(model.ae)))))\n\t\t\t]));\n};\nvar elm$browser$Browser$element = _Browser_element;\nvar author$project$Main$main = elm$browser$Browser$element(\n\t{\n\t\taO: function (_n0) {\n\t\t\treturn author$project$Main$init;\n\t\t},\n\t\taV: author$project$Main$subscriptions,\n\t\taX: author$project$Update$update,\n\t\taZ: author$project$View$view\n\t});\n_Platform_export({'Main':{'init':author$project$Main$main(\n\telm$json$Json$Decode$succeed(0))(0)}});}(this));","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './main.css';\nimport { Elm } from './Main.elm';\nimport registerServiceWorker from './registerServiceWorker';\n\nElm.Main.init({\n  node: document.getElementById('root')\n});\n\nregisterServiceWorker();\n"],"sourceRoot":""}